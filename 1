diff --git a/.DS_Store b/.DS_Store
index ff995e3..cbd9783 100644
Binary files a/.DS_Store and b/.DS_Store differ
diff --git a/src/CGI/CGI.cpp b/src/CGI/CGI.cpp
index 7bf59c3..f62f95d 100644
--- a/src/CGI/CGI.cpp
+++ b/src/CGI/CGI.cpp
@@ -1,3 +1,15 @@
+/* ************************************************************************** */
+/*                                                                            */
+/*                                                        :::      ::::::::   */
+/*   CGI.cpp                                            :+:      :+:    :+:   */
+/*                                                    +:+ +:+         +:+     */
+/*   By: hmellahi <hmellahi@student.42.fr>          +#+  +:+       +#+        */
+/*                                                +#+#+#+#+#+   +#+           */
+/*   Created: 2021/10/17 01:45:50 by hamza             #+#    #+#             */
+/*   Updated: 2021/10/20 18:12:47 by hmellahi         ###   ########.fr       */
+/*                                                                            */
+/* ************************************************************************** */
+
 #include "CGI.hpp"
 
 std::string     CGI::exec_file(const char* path)
diff --git a/src/Conf/default.conf b/src/Conf/default.conf
deleted file mode 100644
index a38b6f5..0000000
--- a/src/Conf/default.conf
+++ /dev/null
@@ -1,27 +0,0 @@
-server {
-    server_name test hello# can be multi
-    # listen 80 # the port too can be multi
-    listen 8000
-    # listen 200
-    page_error 505 index.html # this is error can be multi
-    page_error 404 index.html
-    index index.html index.php # can be multi
-    root path/aa1
-    cgi .php /path/to/ # can be multi
-    client_max_body_size 400 # just integer
-    allow_methods POST GET
-    upload_path file_uploads
-    redirection 301 $scheme://www.mysite.com
-}
-# can be multi servers
-# server {
-#     server_name test2
-#     listen 6000
-#     index index.html
-#     root path/aa2
-#     auto_index on
-#     location /BETA {
-#         root fwefwef
-#         redirection 301 $scheme://www.mysite.com
-#     }
-# }
\ No newline at end of file
diff --git a/src/HTTP/Response/Response.cpp b/src/HTTP/Response/Response.cpp
index e69de29..a5675ad 100644
--- a/src/HTTP/Response/Response.cpp
+++ b/src/HTTP/Response/Response.cpp
@@ -0,0 +1,12 @@
+/* ************************************************************************** */
+/*                                                                            */
+/*                                                        :::      ::::::::   */
+/*   Response.cpp                                       :+:      :+:    :+:   */
+/*                                                    +:+ +:+         +:+     */
+/*   By: hmellahi <hmellahi@student.42.fr>          +#+  +:+       +#+        */
+/*                                                +#+#+#+#+#+   +#+           */
+/*   Created: 2021/10/16 21:29:05 by hmellahi          #+#    #+#             */
+/*   Updated: 2021/10/16 21:29:06 by hmellahi         ###   ########.fr       */
+/*                                                                            */
+/* ************************************************************************** */
+
diff --git a/src/HTTP/Response/Response.hpp b/src/HTTP/Response/Response.hpp
index 3d94bcc..f06892b 100644
--- a/src/HTTP/Response/Response.hpp
+++ b/src/HTTP/Response/Response.hpp
@@ -1,3 +1,15 @@
+/* ************************************************************************** */
+/*                                                                            */
+/*                                                        :::      ::::::::   */
+/*   Response.hpp                                       :+:      :+:    :+:   */
+/*                                                    +:+ +:+         +:+     */
+/*   By: hmellahi <hmellahi@student.42.fr>          +#+  +:+       +#+        */
+/*                                                +#+#+#+#+#+   +#+           */
+/*   Created: 2021/10/15 17:14:51 by hamza             #+#    #+#             */
+/*   Updated: 2021/10/20 18:42:06 by hmellahi         ###   ########.fr       */
+/*                                                                            */
+/* ************************************************************************** */
+
 #pragma once
 #include "Server.hpp"
 #include "MediaTypes.h"
diff --git a/src/Parser/default.conf b/src/Parser/default.conf
new file mode 100644
index 0000000..c91761f
--- /dev/null
+++ b/src/Parser/default.conf
@@ -0,0 +1,38 @@
+server {
+    server_name test hello# can be multi
+    listen 80 # the port too can be multi
+    listen 8000
+    listen 200
+    page_error 505 index.html # this is error can be multi
+    page_error 404 index.html
+    index index.html index.php # can be multi
+    root path/aa1
+    cgi .php /path/to/ # can be multi
+    client_max_body_size 400 # just integer
+    allow_methods POST GET
+    upload_path file_uploads
+    redirection 301 $scheme://www.mysite.com
+    location /test {
+        server_name nouha
+        root path/aa3
+        page_error 505 index.html
+        allow_methods POST GET
+        upload_path regerg
+    }
+    location /BETA {
+        root fwefwef
+        redirection 301 $scheme://www.mysite.com
+    }
+}
+# can be multi servers
+server {
+    server_name test2
+    listen 6000
+    index index.html
+    root path/aa2
+    auto_index on
+    location /BETA {
+        root fwefwef
+        redirection 301 $scheme://www.mysite.com
+    }
+}
\ No newline at end of file
diff --git a/src/Parser/macros.hpp b/src/Parser/macros.hpp
index 791c6fa..8966076 100644
--- a/src/Parser/macros.hpp
+++ b/src/Parser/macros.hpp
@@ -1,3 +1,15 @@
+/* ************************************************************************** */
+/*                                                                            */
+/*                                                        :::      ::::::::   */
+/*   macros.hpp                                         :+:      :+:    :+:   */
+/*                                                    +:+ +:+         +:+     */
+/*   By: hamza <hamza@student.42.fr>                +#+  +:+       +#+        */
+/*                                                +#+#+#+#+#+   +#+           */
+/*   Created: 2021/10/16 00:15:27 by hamza             #+#    #+#             */
+/*   Updated: 2021/10/18 00:18:38 by hamza            ###   ########.fr       */
+/*                                                                            */
+/* ************************************************************************** */
+
 #pragma once
 #include <sys/socket.h>
 #include <unistd.h>
@@ -20,8 +32,6 @@
 #include <ctime>
 #include <string>
 
-#define DEFAULT_CONFIG_PATH "src/Conf/default.conf";
-
 enum methods
 {
     GET,
@@ -33,7 +43,6 @@ enum file_status
 {
     IS_DIRECTORY
 };
-
 // {
 //     SUCCESS,
 //     CANT_OPEN_FILE,
diff --git a/src/Server/Server.cpp b/src/Server/Server.cpp
index 9e15f51..e08fa41 100644
--- a/src/Server/Server.cpp
+++ b/src/Server/Server.cpp
@@ -1,3 +1,15 @@
+/* ************************************************************************** */
+/*                                                                            */
+/*                                                        :::      ::::::::   */
+/*   Server.cpp                                         :+:      :+:    :+:   */
+/*                                                    +:+ +:+         +:+     */
+/*   By: hmellahi <hmellahi@student.42.fr>          +#+  +:+       +#+        */
+/*                                                +#+#+#+#+#+   +#+           */
+/*   Created: 2021/10/20 18:38:06 by hmellahi          #+#    #+#             */
+/*   Updated: 2021/10/20 18:38:37 by hmellahi         ###   ########.fr       */
+/*                                                                            */
+/* ************************************************************************** */
+
 #include "Server.hpp"
 
 void	Server::addClients(std::vector<Socket> clients, int &max_fd, fd_set &readfds)
@@ -87,32 +99,4 @@ void	Server::RecvAndSend(std::vector<Socket> &clients, fd_set &readfds,  std::ve
 			}
 		}
 	}
-}
-
-// void	Server::server_loop()
-// {
-// 	//set of socket descriptors
-// 	fd_set				readfds;
-// 	std::vector<Socket> clients;
-// 	Socket				new_socket;
-// 	int					max_sd;
-
-// 	while(TRUE)
-// 	{
-// 		//clear the sockets set
-// 		FD_ZERO(&readfds);
-// 		// add all servers sockets to the sockets set  [readfds]
-// 		Server::addServers(serversSockets, max_sd, readfds);
-// 		// add child sockets to the sockets set
-// 		Server::addClients(clients, max_sd, readfds);
-// 		// wait for an activity on one of the client sockets , timeout is NULL ,
-// 		// so wait indefinitely
-// 		Server::waitingForConnections(activity, readfds);
-// 		// If something happened on the servers sockets ,
-// 		// then its an incoming connection
-// 		Server::acceptNewConnection(clients, serversSockets, address, addrlen, readfds);
-// 		// otherwise its some IO operation on some other socket
-// 		// recieve Client Request And Send Back A Response();
-// 		Server::RecvAndSend(clients, readfds, servers);
-// 	}
-// }
\ No newline at end of file
+}
\ No newline at end of file
diff --git a/src/Server/Server.hpp b/src/Server/Server.hpp
index a6db3a7..c1775d2 100644
--- a/src/Server/Server.hpp
+++ b/src/Server/Server.hpp
@@ -1,3 +1,15 @@
+/* ************************************************************************** */
+/*                                                                            */
+/*                                                        :::      ::::::::   */
+/*   Server.hpp                                         :+:      :+:    :+:   */
+/*                                                    +:+ +:+         +:+     */
+/*   By: hmellahi <hmellahi@student.42.fr>          +#+  +:+       +#+        */
+/*                                                +#+#+#+#+#+   +#+           */
+/*   Created: 2021/10/15 16:14:21 by hamza             #+#    #+#             */
+/*   Updated: 2021/10/20 18:43:00 by hmellahi         ###   ########.fr       */
+/*                                                                            */
+/* ************************************************************************** */
+
 #pragma once
 
 #include "macros.hpp"
@@ -20,19 +32,16 @@ private:
     struct sockaddr_in _address;
     int addrlen;
     int _port;
-    Config _config;
 
 public:
-    Server(){}
-    Server(Config config)
+    Server()
     {
-        _config = config;
-    }
+    } 
 
     ~Server()
     {
-        for (int i = 0; i < _serverSockets.size(); i++)
-            close(_serverSockets[i]);
+        // for (int i = 0; i < _serverSocketsFd.size(); i++)
+        //     close(_serverSocketsFd[i]);
     }
     
     static void	addClients(std::vector<Socket> clients, int &max_fd, fd_set &readfds);
@@ -41,12 +50,15 @@ public:
     static void	acceptNewConnection(std::vector<Socket> &clients, std::vector<Socket> &serversSockets, struct sockaddr_in &address, int &addrlen, fd_set &readfds);
     static void	RecvAndSend(std::vector<Socket> &clients, fd_set &readfds,  std::vector<Server> &servers);
 
+
+
+
     std::vector<Socket> getSockets()
     {
        return _serverSockets;
     }
     
-    Socket  addPort(int port)
+    void    addPort(int port)
     {
         // create new socket on the given port
         Socket new_socket(port);
@@ -54,8 +66,6 @@ public:
         _serverSockets.push_back(new_socket);
         // debugging
         std::cout << "Server started, go to 127.0.0.1:" << port << std::endl;
-        
-        return new_socket;
     }
 
     void    handleConnection(std::string requestBody, int client_fd)
diff --git a/src/Socket/Socket.cpp b/src/Socket/Socket.cpp
index cbb9128..fda5656 100644
--- a/src/Socket/Socket.cpp
+++ b/src/Socket/Socket.cpp
@@ -1,3 +1,15 @@
+/* ************************************************************************** */
+/*                                                                            */
+/*                                                        :::      ::::::::   */
+/*   Socket.cpp                                         :+:      :+:    :+:   */
+/*                                                    +:+ +:+         +:+     */
+/*   By: hmellahi <hmellahi@student.42.fr>          +#+  +:+       +#+        */
+/*                                                +#+#+#+#+#+   +#+           */
+/*   Created: 2021/10/18 02:04:00 by hamza             #+#    #+#             */
+/*   Updated: 2021/10/20 15:49:10 by hmellahi         ###   ########.fr       */
+/*                                                                            */
+/* ************************************************************************** */
+
 #include "Socket.hpp"
 
 Socket::Socket()
diff --git a/src/Socket/Socket.hpp b/src/Socket/Socket.hpp
index 535838d..6d07650 100644
--- a/src/Socket/Socket.hpp
+++ b/src/Socket/Socket.hpp
@@ -1,3 +1,15 @@
+/* ************************************************************************** */
+/*                                                                            */
+/*                                                        :::      ::::::::   */
+/*   Socket.hpp                                         :+:      :+:    :+:   */
+/*                                                    +:+ +:+         +:+     */
+/*   By: hmellahi <hmellahi@student.42.fr>          +#+  +:+       +#+        */
+/*                                                +#+#+#+#+#+   +#+           */
+/*   Created: 2021/10/18 01:53:18 by hamza             #+#    #+#             */
+/*   Updated: 2021/10/20 15:42:06 by hmellahi         ###   ########.fr       */
+/*                                                                            */
+/* ************************************************************************** */
+
 #pragma once
 #include "macros.hpp"
 
diff --git a/src/main.cpp b/src/main.cpp
index 52ff042..d07297f 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -1,3 +1,53 @@
+// /* ************************************************************************** */
+// /*                                                                            */
+// /*                                                        :::      ::::::::   */
+// /*   main.cpp                                           :+:      :+:    :+:   */
+// /*                                                    +:+ +:+         +:+     */
+// /*   By: hamza <hamza@student.42.fr>                +#+  +:+       +#+        */
+// /*                                                +#+#+#+#+#+   +#+           */
+// /*   Created: 2021/10/12 22:11:00 by hamza             #+#    #+#             */
+// /*   Updated: 2021/10/18 01:06:13 by hamza            ###   ########.fr       */
+// /*                                                                            */
+// /* ************************************************************************** */
+
+// // Server side C program to demonstrate HTTP Server programming
+// #include "Server.hpp"
+// #include "CGI.hpp"
+// #include "Config.hpp"
+
+
+// int main(int ac, char const *av[])
+// {
+//     (void)ac;
+//     // char path[] = "tests/index.php";
+//     // std::cout << CGI::exec_file(path);
+//     // Server nginx;
+//     // nginx.listen(atoi(av[1]));
+//     // nginx.start();
+//     // Get Server
+//     Config nginx;
+//     nginx._ports.push_back(atoi(av[1]));
+//     // Config apache;
+//     // apache._ports.push_back(atoi(av[1]) + 1);
+//     std::vector<Config> serversList;
+//     serversList.push_back(nginx);
+//     // serversList.push_back(apache);
+//     Config server;
+//     std::vector<int> ports;
+    
+//     // loop throught all Servers
+//     for (std::vector<Config>::iterator it = serversList.begin(); it != serversList.end(); it++)
+//     {
+//         server = *it;
+//         ports = server._ports;
+//         Server newServer;
+//         for (int i = 0; i < ports.size(); i++)
+//             newServer.listen(ports[i]);
+//         newServer.start();
+//     }
+//     return 0;
+// }
+
 //Example code: A simple server side code, which echos back the received message.
 //Handle multiple socket connections with select and fd_set on Linux
 #include <stdio.h>
@@ -13,7 +63,6 @@
 #include "Server.hpp"
 #include "CGI.hpp"
 #include "Config.hpp"
-#include "ParseConfig.hpp"
 #include "Socket.hpp"
 
 #define TRUE 1
@@ -21,16 +70,41 @@
 #define PORT 8888
 #define MAX_CLIENTS FD_SETSIZE
 
-void	server_loop(std::vector<Socket> &serversSockets, std::vector<Server> &servers)
+
+int main(int argc , char *av[])
 {
-	//set of socket descriptors
-	fd_set				readfds;
+	int opt = TRUE;
+	int  addrlen , activity, i , valread , sd;
 	std::vector<Socket> clients;
-	Socket				new_socket;
-	int					max_sd;
-	int  addrlen , activity;
+	Socket new_socket;
+	int max_sd;
 	struct sockaddr_in address;
+		
+	char buffer[1025];
+
+	//set of socket descriptors
+	fd_set readfds;
+		
+	// Server	nginx;
+	// nginx.addPort(atoi(av[1]));
+	// nginx.addPort(atoi(av[1]) + 1);
+
+	// Server	apache;
+	// apache.addPort(atoi(av[1]) + 2);
+	// apache.addPort(atoi(av[1]) + 3);
+
+	// std::vector<Server> servers;
+	// servers.push_back(nginx);
+	// servers.push_back(apache);
+	// std::vector<Socket> serversSockets;
+	// std::vector<Socket> nginxFds = nginx.getSockets();
+	// std::vector<Socket> apacheFds = apache.getSockets();
+
+	// serversSockets.insert(serversSockets.begin(), nginxFds.begin(), nginxFds.end());
+	// serversSockets.insert(serversSockets.begin(), apacheFds.begin(), apacheFds.end());
+
 
+	//accept the incoming connection
 	addrlen = sizeof(address);
 	puts("Waiting for connections ...");
 	while(TRUE)
@@ -51,120 +125,5 @@ void	server_loop(std::vector<Socket> &serversSockets, std::vector<Server> &serve
 		// recieve Client Request And Send Back A Response();
 		Server::RecvAndSend(clients, readfds, servers);
 	}
-}
-
-void read_config(ParseConfig &ParseConfig)
-{
-	std::vector<Config> servers = ParseConfig.getServers();
-	std::vector<Config>::iterator it;
-	std::map<std::string, Config>::iterator it_loc;
-	for (it = servers.begin(); it != servers.end(); it++)
-	{
-		std::cout << "-------------  Server Information    -------------\n";
-		std::cout <<"Root:" << it->getRoot() << std::endl;
-		std::cout <<"Server Name: ";
-		std::vector<std::string> server_names = it->get_server_name();
-		for (std::vector<std::string>::iterator sn = server_names.begin(); sn != server_names.end(); sn++)
-		{
-			std::cout  << *sn << " ";
-		}
-		std::cout << "\n";
-		std::cout <<"Max Body:" << it->get_client_max_body_size() << std::endl;
-		std::cout <<"Auto Index:" << it->get_isAutoIndexOn() << std::endl;
-		std::map<std::string, Config> loc = it->getLocation();
-		for (it_loc = loc.begin(); it_loc != loc.end(); it_loc++)
-		{
-			std::cout << "In locations: Root: " << it_loc->second.getRoot() << " || upload_path: " << it_loc->second.get_uploadPath() << std::endl;
-			std::cout <<"-----> Server Name: ";
-			std::vector<std::string> server_names = it_loc->second.get_server_name();
-			for (std::vector<std::string>::iterator sn = server_names.begin(); sn != server_names.end(); sn++)
-			{
-				std::cout  << *sn << " ";
-			}
-			std::cout << "\n";
-		}
-		std::cout << "------------- End Server Information -------------\n\n";
-
-	}
-}
-
-void	setup_servers(ParseConfig GlobalConfig)
-{
-	std::vector<Config> serversConfigs = GlobalConfig.getServers();
-	std::vector<Config>::iterator serverConfig;
-	std::vector<u_int32_t>::iterator port;
-	std::vector<Socket> serversSockets;
-	std::vector<Server> servers;
-	Socket new_socket;
-
-	for (serverConfig = serversConfigs.begin(); serverConfig != serversConfigs.end(); serverConfig++)
-	{
-		Server newServer(*serverConfig);
-
-		std::vector<u_int32_t> ports = serverConfig->get_listen();
-		for (port = ports.begin(); port != ports.end(); port++)
-		{
-			new_socket = newServer.addPort(*port);
-			serversSockets.push_back(new_socket);
-			std::cout << new_socket.getSocketFd() << std::endl;
-		}
-		servers.push_back(newServer);
-	}
-	server_loop(serversSockets, servers);
-}
-
-int main(int ac , char *av[])
-{
-	// try
-	// {
-	// 	if (ac <= 2)
-	// 	{
-	// 		const char * file;
-
-	// 		if (av[1])
-	// 			file = av[1];
-	// 		else
-	// 			file = DEFAULT_CONFIG_PATH;
-	// 		// 1 - first thing to do is parsing the config file
-	// 		ParseConfig GlobalConfig(file);
-	// 		// read_config(ParseCo nfig);
-	// 		start_servers(GlobalConfig);
-	// 	}
-	// 	else
-	// 	{
-	// 		std::cerr << "Error: Wrong Number of Argument ." << std::endl;
-	// 		exit(EXIT_FAILURE);
-	// 	}
-	// }
-	// catch(const std::exception& e)
-	// {
-	// 	std::cerr << e.what() << '\n';
-	// }
-	// int  addrlen , activity ;
-	// struct sockaddr_in address;
-	// char buffer[1025];
-
-	Server	nginx;
-	nginx.addPort(atoi(av[1]));
-	nginx.addPort(atoi(av[1]) + 1);
-
-	Server	apache;
-	apache.addPort(atoi(av[1]) + 2);
-	apache.addPort(atoi(av[1]) + 3);
-
-	std::vector<Server> servers;
-	servers.push_back(nginx);
-	servers.push_back(apache);
-	std::vector<Socket> serversSockets;
-	std::vector<Socket> nginxFds = nginx.getSockets();
-	std::vector<Socket> apacheFds = apache.getSockets();	
-
-	serversSockets.insert(serversSockets.begin(), nginxFds.begin(), nginxFds.end());
-	serversSockets.insert(serversSockets.begin(), apacheFds.begin(), apacheFds.end());
-
-
-	//accept the incoming connection
-	// addrlen = sizeof(address);
-	server_loop(serversSockets, servers);
 	return 0;
-}
\ No newline at end of file
+}
diff --git a/src/utils/FileSystem/FileSystem.cpp b/src/utils/FileSystem/FileSystem.cpp
index d1408b1..0ef0db1 100644
--- a/src/utils/FileSystem/FileSystem.cpp
+++ b/src/utils/FileSystem/FileSystem.cpp
@@ -1,3 +1,15 @@
+/* ************************************************************************** */
+/*                                                                            */
+/*                                                        :::      ::::::::   */
+/*   FileSystem.cpp                                     :+:      :+:    :+:   */
+/*                                                    +:+ +:+         +:+     */
+/*   By: hmellahi <hmellahi@student.42.fr>          +#+  +:+       +#+        */
+/*                                                +#+#+#+#+#+   +#+           */
+/*   Created: 2021/10/16 21:38:31 by hmellahi          #+#    #+#             */
+/*   Updated: 2021/10/20 18:31:56 by hmellahi         ###   ########.fr       */
+/*                                                                            */
+/* ************************************************************************** */
+
 #include "FileSystem.hpp"
 #include "Config.hpp"
 
diff --git a/src/utils/FileSystem/FileSystem.hpp b/src/utils/FileSystem/FileSystem.hpp
index b29da97..847d3b8 100644
--- a/src/utils/FileSystem/FileSystem.hpp
+++ b/src/utils/FileSystem/FileSystem.hpp
@@ -1,3 +1,15 @@
+/* ************************************************************************** */
+/*                                                                            */
+/*                                                        :::      ::::::::   */
+/*   FileSystem.hpp                                     :+:      :+:    :+:   */
+/*                                                    +:+ +:+         +:+     */
+/*   By: hamza <hamza@student.42.fr>                +#+  +:+       +#+        */
+/*                                                +#+#+#+#+#+   +#+           */
+/*   Created: 2021/10/16 20:11:46 by hmellahi          #+#    #+#             */
+/*   Updated: 2021/10/19 00:11:20 by hamza            ###   ########.fr       */
+/*                                                                            */
+/* ************************************************************************** */
+
 #pragma once
 #include "macros.hpp"
 #include <vector>
diff --git a/src/utils/str_utils.cpp b/src/utils/str_utils.cpp
index 8f7b3f8..4c5785c 100644
--- a/src/utils/str_utils.cpp
+++ b/src/utils/str_utils.cpp
@@ -1,3 +1,15 @@
+/* ************************************************************************** */
+/*                                                                            */
+/*                                                        :::      ::::::::   */
+/*   str_utils.cpp                                      :+:      :+:    :+:   */
+/*                                                    +:+ +:+         +:+     */
+/*   By: hmellahi <hmellahi@student.42.fr>          +#+  +:+       +#+        */
+/*                                                +#+#+#+#+#+   +#+           */
+/*   Created: 2021/10/16 04:02:41 by hamza             #+#    #+#             */
+/*   Updated: 2021/10/18 21:40:42 by hmellahi         ###   ########.fr       */
+/*                                                                            */
+/* ************************************************************************** */
+
 #include "str_utils.hpp"
 
 std::string GetFileExtension(const std::string& fileName)
diff --git a/webserv b/webserv
index cf80c70..616ddb5 100755
Binary files a/webserv and b/webserv differ
